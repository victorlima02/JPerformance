* The MIT License
 *
 * Copyright 2014 Victor de Lima Soares.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.

Library written to easily measure the time performance between two points in a 
java program. 

It provides methods to start and stop timers, collecting performance 
measurements and classes to easily collect data from several experiments,
extracting averages. 
Currently, it only supports measurements on a single thread.

It measures:
    Clock time: time elapsed between the start and end of measurements.
    User time: is the time spent running application's own code.
    System time: is the time spent running OS code on behalf of the 
                application; e.g., I/O.
    CPU time: is user time plus system time. It is the total time spent using 
                any CPU for the application.

Example: 
            SimpleMeter meter = new SimpleMeter();

            meter.start();

            //experiment code

            meter.stop();

and: 

        TimerSummary summary = new TimerSummary("Experiment name");

        for (int i = 0; i < nTests; i++) {
            //test function here returns a SimpleMeter 
            summary.addSimpleMeter(test()); 
        }

        return summary;
